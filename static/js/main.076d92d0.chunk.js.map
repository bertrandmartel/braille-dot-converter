{"version":3,"sources":["component/InfoView.js","component/TopNavBar.js","component/Dot.js","component/BrailleCell.js","component/DotState.js","App.js","serviceWorker.js","index.js"],"names":["InfoView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","components","name","link","sourceCode","copyright","version","close","bind","assertThisInitialized","onDialogClose","_this2","react_default","a","createElement","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","ListItem_default","ListItemIcon_default","InfoOutlined_default","ListItemText_default","inset","primary","secondary","Copyright_default","Code_default","href","target","Apps_default","Collapse_default","in","unmountOnExit","map","n","key","DialogActions_default","Button_default","onClick","Component","withStyles","theme","TopNavBar","onShowInfo","classes","AppBar_default","position","color","Toolbar_default","IconButton_default","className","menuButton","aria-label","Menu_default","Typography_default","variant","grow","Tooltip_default","enterDelay","title","showInfo","lastButton","flexGrow","marginLeft","marginRight","Dot","editPosition","editMode","event","onEditPosition","value","classNames","circle","isSet","circleFull","circleEmpty","text","onChange","type","concat","height","width","borderRadius","display","border","textAlign","lineHeight","backgroundColor","BrailleCell","onDotClick","onEditMode","index","pair","component_Dot","pattern","positions","dot","buttonDiv","button","margin","marginRigt","marginTop","DotState","root","table","label","number","pad","parseInt","toString","toUpperCase","invert","num","inverted","count","i","bit","size","s","length","fontSize","borderCollapse","borderSpacing","App","state","openInfo","showSnackbar","snackbarMesage","getInitialPositions","closeDialog","closeSnackbar","pos","localStorage","getItem","split","item","setItem","join","setState","mask","storePositions","component_TopNavBar","component_BrailleCell","cell","component_DotState","component_InfoView","Snackbar_default","anchorOrigin","vertical","horizontal","ContentProps","aria-describedby","message","id","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.076d92d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport CopyrightIcon from '@material-ui/icons/Copyright';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst styles = theme => ({\n});\n\nclass InfoView extends Component {\n\n    components = [\n      {\n        \"name\" : \"create react app\",\n        \"link\" : \"https://github.com/facebookincubator/create-react-app\"\n      },\n      {\n        \"name\" : \"material-ui\",\n        \"link\" : \"http://www.material-ui.com/#/\"\n      }\n    ];\n\n    sourceCode = {\n      \"name\" : \"https://github.com/bertrandmartel/braille-dot-converter\",\n      \"link\" : \"https://github.com/bertrandmartel/braille-dot-converter\"\n    };\n\n    copyright = \"The MIT License (MIT) Copyright (c) 2018 Bertrand Martel\";\n\n    version = 'Braille Dot to Hex converter v' + process.env.REACT_APP_VERSION;\n\n    constructor(props) {\n        super(props);\n        this.close = this.close.bind(this);\n    }\n\n    close() {\n        if (typeof this.props.onDialogClose === 'function') {\n            this.props.onDialogClose();\n        }\n    };\n\n    render() {\n        return  <div>\n                <Dialog open={this.props.open} onClose={this.close}>\n                    <DialogTitle>{\"About\"}</DialogTitle>\n                    <DialogContent>\n                        <ListItem>\n                          <ListItemIcon>\n                            <InfoIcon />\n                          </ListItemIcon>\n                          <ListItemText inset primary=\"Info\" secondary={this.version} />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <CopyrightIcon />\n                          </ListItemIcon>\n                          <ListItemText inset primary=\"Copyright\" secondary={this.copyright} />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <CodeIcon />\n                          </ListItemIcon>\n                          <ListItemText inset primary=\"Source code\" secondary={<a href={this.sourceCode.link} target=\"_blank\">{this.sourceCode.name}</a>} />\n                        </ListItem>\n                        <ListItem>\n                          <ListItemIcon>\n                            <AppsIcon />\n                          </ListItemIcon>\n                          <ListItemText inset primary=\"Open Source components\" />\n                        </ListItem>\n                        <Collapse in={true} unmountOnExit>\n                            {this.components.map(n => {\n                                return (\n                                    <ListItem key={n.name} >\n                                      <ListItemText inset primary={<a href={n.link} target=\"_blank\">{n.name}</a>} />\n                                    </ListItem>\n                                  );\n                                })\n                            }\n                        </Collapse>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button onClick={() => this.close()}>Close</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n    }\n}\n\nInfoView.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InfoView);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n});\n\nclass TopNavBar extends Component {\n\n\tshowInfo() {\n\t\tif (typeof this.props.onShowInfo === 'function') {\n\t\t\tthis.props.onShowInfo();\n\t\t}\n\t}\n\n    render() {\n    \tconst { classes } = this.props;\n        return  <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\n            Braille Dot to Hex converter\n          </Typography>\n          <Tooltip enterDelay={100}  title=\"information\">\n              <IconButton onClick={() => this.showInfo()} color=\"default\" className={classes.lastButton} aria-label=\"information\">\n                <InfoIcon />\n              </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n    }\n}\n\nTopNavBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TopNavBar);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst styles = theme => ({\n\tcircle: {\n\t\theight: \"80px\",\n\t\twidth: \"80px\",\n\t\tborderRadius: \"50%\",\n\t\tdisplay: \"inline-block\",\n\t\tborder: \"1px solid #000000\",\n        textAlign: \"center\",\n        lineHeight: \"80px\",\n        color: \"#FFFFFF\"\n\t},\n\tcircleEmpty: {\n\t\tbackgroundColor: \"#808080\"\n\t},\n\tcircleFull: {\n\t\tbackgroundColor: \"#000000\"\n\t},\n    text: {\n        textAlign: \"center\",\n        width: \"40px\",\n    }\n});\n\nclass Dot extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n        this.editPosition = this.editPosition.bind(this);\n    }\n\n    onClick(){\n\t\tif (!this.props.editMode && typeof this.props.onClick === 'function') {\n\t\t\tthis.props.onClick(this.props.position);\n\t\t}\n    }\n\n    editPosition(event){\n        if (typeof this.props.onEditPosition === 'function') {\n            this.props.onEditPosition(event.target.value);\n        }\n    }\n\n    render() {\n    \tconst { classes } = this.props;\n        return  <div \n        \tclassName={\n        \t\tclassNames(\n        \t\t\tclasses.circle,\n        \t\t\tthis.props.isSet ? classes.circleFull : classes.circleEmpty, \n        \t\t\tthis.props.className\n        \t\t)\n        \t}\n        \tonClick={this.onClick}\n        \t>\n            {\n                this.props.editMode ? \n                    (<input className={classes.text} \n                            onChange={this.editPosition} \n                            type=\"text\" \n                            name={`edit-${this.props.position}`} \n                            value={this.props.position}/>) : (this.props.position)\n            }\n            </div>\n    }\n}\n\nDot.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dot);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nimport Dot from './Dot.js';\n\nconst styles = theme => ({\n  pair: {\n    margin: 20,\n    textAlign: \"center\"\n  },\n  dot:{\n    marginLeft: 40,\n    marginRigt: 40\n  },\n   buttonDiv: {\n    textAlign: \"center\",\n  },\n  button:{\n    marginTop: 20,\n    marginLeft: 40\n  }\n});\n\nclass BrailleCell extends Component {\n\n    constructor(props) {\n        super(props);\n        this.editMode = this.editMode.bind(this);\n        this.onEditPosition = this.onEditPosition.bind(this);\n    }\n\n    onDotClick(position){\n      if (typeof this.props.onDotClick === 'function') {\n        this.props.onDotClick(position);\n      }\n    }\n\n    editMode(){\n      if (typeof this.props.onEditMode === 'function') {\n        this.props.onEditMode();\n      }\n    }\n\n    onEditPosition(index, value) {\n      if (typeof this.props.onEditPosition === 'function') {\n        this.props.onEditPosition(index, value);\n      }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return  <div className={this.props.className}>\n            <div className={classes.pair}>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[0]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[0]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(0, value)}\n                editMode={this.props.editMode}/>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[3]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[3]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(3, value)}\n                editMode={this.props.editMode}/>\n            </div>\n            <div className={classes.pair}>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[1]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[1]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(1, value)}\n                editMode={this.props.editMode}/>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[4]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[4]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(4, value)}\n                editMode={this.props.editMode}/>\n            </div>\n            <div className={classes.pair}>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[2]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[2]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(2, value)}\n                editMode={this.props.editMode}/>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[5]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[5]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(5, value)}\n                editMode={this.props.editMode}/>\n            </div>\n            <div className={classes.pair}>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[6]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[6]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(6, value)}\n                editMode={this.props.editMode}/>\n              <Dot \n                isSet={(this.props.pattern & (1 << (this.props.positions[7]-1))) !== 0} \n                onClick={(position) => this.onDotClick(position)}\n                position={this.props.positions[7]}\n                className={classes.dot}\n                onEditPosition={(value) => this.props.onEditPosition(7, value)}\n                editMode={this.props.editMode}/>\n            </div>\n            <div className={classes.buttonDiv}>\n              <Button variant=\"contained\" className={classes.button} onClick={this.editMode}>\n                {this.props.editMode ? \"apply\" : \"edit bit position\"}\n              </Button>\n            </div>\n        </div>\n    }\n}\n\nBrailleCell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BrailleCell);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    root: {\n        margin: \"auto\",\n        width: \"50%\",\n        marginTop: 50,\n        textAlign:\"center\",\n        fontSize: \"3em\"\n    },\n    table: {\n        margin: \"auto\",\n        borderCollapse: \"separate\",\n        borderSpacing: \"50px 0\"\n    },\n    number: {\n        textAlign: \"right\"\n    },\n    label: {\n        textAlign: \"left\"\n    }\n});\n\nclass DotState extends Component {\n\n    render() {\n    \tconst { classes } = this.props;\n        return  <div className={classes.root}>\n                    <table className={classes.table}>\n                        <tbody>\n                        <tr>\n                            <td className={classes.label}>original</td>\n                            <td className={classes.number}>{pad(parseInt(this.props.pattern, 10).toString(2), 8)}</td>\n                            <td className={classes.number}>{pad(parseInt(this.props.pattern, 10).toString(16).toUpperCase(), 2)}</td>\n                        </tr>\n                        <tr>\n                            <td className={classes.label}>original inverted</td>\n                            <td className={classes.number}>{pad(parseInt(invert(this.props.pattern), 10).toString(2), 8)}</td>\n                            <td className={classes.number}>{pad(parseInt(invert(this.props.pattern), 10).toString(16).toUpperCase(), 2)}</td>\n                        </tr>\n                        <tr>\n                            <td className={classes.label}>XOR</td>\n                            <td className={classes.number}>{pad(parseInt(this.props.pattern ^ 0xFF, 10).toString(2), 8)}</td>\n                            <td className={classes.number}>{pad(parseInt(this.props.pattern ^ 0xFF, 10).toString(16).toUpperCase(), 2)}</td>\n                        </tr>\n                        <tr>\n                            <td className={classes.label}>XOR inverted</td>\n                            <td className={classes.number}>{pad(parseInt(invert(this.props.pattern ^ 0x3FF), 10).toString(2), 8)}</td>\n                            <td className={classes.number}>{pad(parseInt(invert(this.props.pattern ^ 0x3FF), 10).toString(16).toUpperCase(), 2)}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n            </div>\n    }\n}\n\nfunction invert(num){\n    var inverted = 0;\n    var count = 0;\n    for (var i = 8; i >=0;i--){\n        var bit = 0;\n        if ((num & (1 << (i-1))) !== 0){\n            bit = 1;\n        }\n        inverted += bit << count;\n        count++;\n    }\n    return inverted;\n}\n\nfunction pad(num, size) {\n    var s = `${num}`;\n    while (s.length < size) s = `0${s}`;\n    return s;\n}\n\nDotState.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DotState);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport InfoView from './component/InfoView.js';\nimport TopNavBar from './component/TopNavBar.js';\nimport BrailleCell from './component/BrailleCell.js';\nimport DotState from './component/DotState.js';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  cell: {\n    margin: \"auto\",\n    width: \"50%\",\n    marginTop: 50\n  }\n};\n\nclass App extends Component {\n\n  state = {\n    openInfo: false,\n    pattern: 0b00000000,\n    editMode: false,\n    showSnackbar: false,\n    snackbarMesage: \"\",\n    positions: this.getInitialPositions()\n  };\n\n  constructor(props){\n    super(props);\n    this.closeDialog = this.closeDialog.bind(this);\n    this.showInfo = this.showInfo.bind(this);\n    this.onDotClick = this.onDotClick.bind(this);\n    this.onEditMode = this.onEditMode.bind(this);\n    this.onEditPosition = this.onEditPosition.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n\n  getInitialPositions(){\n    var pos = localStorage.getItem(\"positions\");\n    if(pos){\n      return pos.split(',').map(function(item){\n        return parseInt(item, 10);\n      })\n    }\n    else {\n      localStorage.setItem(\"positions\", \"1,2,3,4,5,6,7,8\");\n      return [1,2,3,4,5,6,7,8];\n    }\n  }\n\n  storePositions(){\n    localStorage.setItem(\"positions\", this.state.positions.join());\n  }\n\n  showInfo() {\n    this.setState({\n      openInfo: true\n    });\n  }\n\n\n  closeDialog(){\n    this.setState({\n      openInfo: false\n    });\n  }\n\n  onDotClick(position){\n    var mask = 1 << (position - 1);\n    var pattern = this.state.pattern;\n    if ((pattern & mask) !== 0){\n      pattern &= ~mask;\n      this.setState({\n        pattern: pattern\n      });\n    } else {\n      pattern |= mask;\n      this.setState({\n        pattern: pattern\n      });\n    }\n  }\n\n  onEditMode(){\n    if (this.state.editMode){\n      for (var i = 0; i < this.state.positions.length; i++){\n        if (this.state.positions[i] === \"\"){\n          return this.setState({\n            showSnackbar: true,\n            snackbarMesage: \"there are missing position left\"\n          });\n        }\n      }\n      this.setState({\n        editMode: false\n      });\n    } else {\n      this.setState({\n        editMode: true\n      });\n    }\n  }\n\n  closeSnackbar(){\n    this.setState({\n      showSnackbar: false\n    })\n  }\n\n  onEditPosition(index, value){\n    var positions = this.state.positions;\n    if (value !== \"\"){\n      for (var i = 0; i < positions.length; i++){\n        if ((i !== index) && (positions[i] == value)){\n          positions[i] = \"\";\n        }\n      }\n    }\n    positions[index] = value;\n    this.storePositions();\n    this.setState({\n      positions: positions\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const vertical ='bottom';\n    const horizontal = 'right';\n    return (\n      <div className={classes.root}>\n      <TopNavBar onShowInfo={this.showInfo}/>\n      <BrailleCell \n        className={classes.cell} \n        pattern={this.state.pattern}\n        positions={this.state.positions}\n        editMode={this.state.editMode}\n        onDotClick={(position) => this.onDotClick(position)}\n        onEditMode={this.onEditMode}\n        onEditPosition={(index, value) => this.onEditPosition(index, value)}/>\n      <DotState \n        pattern={this.state.pattern}\n        />\n      <InfoView\n          onDialogClose={this.closeDialog}\n          open={this.state.openInfo}\n      />\n      <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={this.state.showSnackbar}\n          onClose={this.closeSnackbar}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarMesage}</span>}\n        />\n    </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}